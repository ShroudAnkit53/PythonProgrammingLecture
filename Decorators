# Python decorators are a powerful and versatile tool that allow you to modify the behaviour of functions and methods.They are a way to extend the functionality of a fumction or 
method without modifying its source code.

# A decorator is a function that takes another function as an arguement and returns a new function that modifies the behaviour of the original function.The new function is often 
referred to as a "decorated" function.The basic syntax for using a decorator is the following:

# @decorator_function
# def my_function():
#     pass

def greet(fx):
    def mfx():
        print("Good Morning")
        fx()
        print("Thanks for using this function")
    return mfx

@greet
def hello():
    print("Hello World")

def add(a,b):
    print(a+b)

hello()
add(1,3)
